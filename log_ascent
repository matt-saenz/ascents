#!/usr/bin/env python

"""Script for logging an ascent using the ascent module."""


import datetime
import sys

from ascent import Ascent, AscentError, AscentLog, AscentLogError
import utils


# Preliminaries

args = sys.argv[1:]

usage = "Usage: log_ascent [--help] csvfile"

if not args:
    sys.exit(usage)

if args[0] == "--help":
    print(usage)
    sys.exit(0)

csvfile = args[0]


# Load log

try:
    log = AscentLog(csvfile)
except FileNotFoundError:
    create = utils.get_y_n(f"{csvfile} not found, create new file (y/n)? ")

    if create == "n":
        print("Aborted logging an ascent")
        sys.exit(0)

    log = AscentLog()
except AscentLogError as e:
    sys.exit(f"Failed to load existing log: {e}")


# Get ascent info

route_info = utils.get_route_info()

date_in = input(
    "Enter the date of the ascent in YYYY-MM-DD format "
    "(or 't' for today or 'y' for yesterday): "
)


# Get date

if date_in in {"t", "y"}:
    today = datetime.date.today()

    if date_in == "t":
        date = today
    else:
        date = today - datetime.timedelta(days=1)
else:
    try:
        date = datetime.date.fromisoformat(date_in)
    except ValueError:
        utils.fail("log", "date must be a valid date in YYYY-MM-DD format")


# Create Ascent object

try:
    ascent = Ascent(*route_info, date)
except AscentError as e:
    utils.fail("log", e)


# Check if known crag

known_crags = log.crags

if ascent.crag not in known_crags:
    print(f"Warning: '{ascent.crag}' is not a known crag")

    if known_crags:
        print("Known crags currently include:", "\n".join(known_crags), sep="\n")

    cont = utils.get_y_n("Continue logging the above ascent (y/n)? ")

    if cont == "n":
        utils.abort("logging")


# Log the ascent

print(f"Ascent to be logged: {ascent}")

log_ascent = utils.get_y_n(f"Log the above ascent in {csvfile} (y/n)? ")

if log_ascent == "n":
    utils.abort("logging")

try:
    log.add(ascent)
except AscentLogError as e:
    utils.fail("log", e)

log.write(csvfile)

print("Successfully logged the above ascent")
